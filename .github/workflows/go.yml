# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches:
    - dev
  pull_request:
    branches:
    - main


jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go v1.22
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache-dependency-path: go.sum

    - name: Install dependencies
      run: go mod tidy

    - name: Run unit tests
      id: unit
      run: go test -v -cover -coverpkg "./internal/service" "./tests/unit_tests"

    - name: Run integration tests
      id: integration
      if: steps.unit.outcome == 'success'
      run: go test -v -cover -coverpkg "./internal/storage/postgres" "./tests/integration_tests"

    - name: Run end to end tests
      id: e2e
      if: steps.integration.outcome == 'success'
      run: go test -v -cover -coverpkg "./internal/web/handlers" "./tests/e2e_tests"

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
